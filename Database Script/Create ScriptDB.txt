
    
create table country
(
    country_id int not null
        primary key,
    country_name varchar(50) not null,
    constraint country_country_name_uindex
        unique (country_name)
);


create table brewery
(
    brewery_id int auto_increment
        primary key,
    brewery_name varchar(255) not null,
    country_id int not null,
    constraint brewery_brewery_name_uindex
        unique (brewery_name),
    constraint brewery_country_country_id_fk
        foreign key (country_id) references country (country_id)
);


create table style
(
    style_id int auto_increment
        primary key,
    style_name varchar(255) not null
);


create table tags
(
    tag_id int auto_increment
        primary key,
    tag_name varchar(30) not null
);


create table users
(
    username varchar(50) not null
        primary key,
    password varchar(68) not null,
    enabled tinyint not null
);


create table authorities
(
    username varchar(50) not null,
    authority varchar(50) not null,
    constraint username_authority
        unique (username, authority),
    constraint authorities_fk
        foreign key (username) references users (username)
);


create table user_details
(
    user_id int auto_increment
        primary key,
    username varchar(20) not null,
    email varchar(30) not null,
    first_name varchar(15) null,
    last_name varchar(15) null,
    constraint user_email_uindex
        unique (email),
    constraint user_details_users_username_fk
        foreign key (username) references users (username)
);


create table beers
(
    beer_id int auto_increment
        primary key,
    beer_name varchar(255) not null,
    description varchar(200) null,
    brewery_id int not null,
    style_id int not null,
    abv double not null,
    picture blob null,
    owner_id int null,
    constraint beers_brewery_brewery_id_fk
        foreign key (brewery_id) references brewery (brewery_id),
    constraint beers_style_id_fk
        foreign key (style_id) references style (style_id),
    constraint beers_user_id_fk
        foreign key (owner_id) references user_details (user_id)
);


create table beer_rating
(
    beer_id int null,
    rating int null,
    user_id int null,
    constraint beer_rating_beers_beer_id_fk
        foreign key (beer_id) references beers (beer_id),
    constraint beer_rating_user_id_fk
        foreign key (user_id) references user_details (user_id)
);


create index beer_rating_rating_id_fk
    on beer_rating (rating);


create table beer_tags
(
    beer_id int null,
    tag_id int null,
    constraint beer_tags_beers_beer_id_fk
        foreign key (beer_id) references beers (beer_id),
    constraint beer_tags_tags_id_fk
        foreign key (tag_id) references tags (tag_id)
);


create table drank_beer_list
(
    beer_id int null,
    user_id int null,
    constraint drunk_beer_list_beers_beer_id_fk
        foreign key (beer_id) references beers (beer_id),
    constraint drunk_beer_list_user_user_id_fk
        foreign key (user_id) references user_details (user_id)
);


create table wish_beer_list
(
    beer_id int not null,
    user_id int not null,
    constraint wish_beer_list_beers_beer_id_fk
        foreign key (beer_id) references beers (beer_id),
    constraint wish_beer_list_user_user_id_fk
        foreign key (user_id) references user_details (user_id)
);














